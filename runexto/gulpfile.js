// Generated by CoffeeScript 1.8.0
(function() {
  var coffee, gjslint, gulp, path, streamqueue;

  gulp = require('gulp');


  coffee = require('gulp-coffee');

  var concat = require('gulp-concat');

    var yaml = require('gulp-yaml');

  streamqueue = require('streamqueue');

  path = require('path');

  gulp.task('coffee', function() {
    return gulp.src(['app.coffee', 'routes/**/*.coffee', 'test/*.coffee', 'lib/**/*.coffee']).pipe(coffee({
      bare: true
    })).pipe(gulp.dest(function(file) {
      console.log('.' + (path.relative('./', path.dirname(file.path))) + '/');
      return '.' + (path.relative('./', path.dirname(file.path))) + '/';
    }));
  });

  gulp.task('js', function() {
    var stream;
    return stream = streamqueue({
      objectMode: true
    });
  });

  gulp.task("css", function(){
    var stream = streamqueue({ objectMode: true });
    // .pipe(minifyCSS())

    stream.queue(
        gulp
            .src(["public/css/**/*.css",
              "!public/css/themes/**"
            ])
            .pipe(concat("bundle.css"))
    );
    return stream.done()
        .pipe(gulp.dest("public/build/css/"));
  });

  gulp.task("fonts", function(){
    var stream = streamqueue({ objectMode: true });
    // .pipe(minifyCSS())

    stream.queue(
        gulp
            .src(["public/fonts/**/*"
            ])
    );
    return stream.done()
        .pipe(gulp.dest("public/build/fonts/"));
  });

  gulp.task("yaml", function(){
    gulp.src('./public/lang/*.yml')
      .pipe(yaml())
      .pipe(gulp.dest('./public/lang/'))
  });


}).call(this);
